# 开发环境
const:
  # 服务器地址
  cloud:
    host: localhost
    port: ${server.port}
    baseUrl: http://${const.cloud.host}:${const.cloud.port}
  # 数据库地址
  sql:
    host: 106.14.58.169
    port: 3306
    baseUrl: http://${const.sql.host}:${const.sql.port}
#  # 对象存储地址
#  cos:
#    host: 100
#    port: name:${my.name} age:${my.age}
#    baseUrl: 航歌
#  # 本机静态资源地址
#  static_dir: /norman/oss/

spring:
  #数据库连接信息
  datasource:
    url: "jdbc:mysql://${const.sql.host}:${const.sql.port}/eric?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true"
    username: eric
    password: 123
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    # 初始连接数
    initialSize: 5
    # 最小连接池数量
    minIdle: 10
    # 最大连接池数量
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置连接超时时间
    connectTimeout: 30000
    # 配置网络超时时间
    socketTimeout: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 600
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    # 配置一个连接在池中最大生存的时间，单位是毫秒
    maxEvictableIdleTimeMillis: 900000
    # 配置检测连接是否有效
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    webStatFilter:
      enabled: true
    statViewServlet:
      enabled: true
      # 设置白名单，不填则允许所有访问
      allow:
      url-pattern: /druid/*
      # 控制台管理用户名和密码
      login-username: admin
      login-password: admin
    filter:
      stat:
        enabled: true
        # 慢SQL记录
        log-slow-sql: true
        slow-sql-millis: 1000
        merge-sql: true
      wall:
        config:
          multi-statement-allow: true
#  # redis缓存数据库
#  redis:
#    database: 0
#    host: 106.14.58.169
#    port: 6379
##    password: 123456
#    timeout: 600 #连接超时时间600毫秒
#    lettuce:
#      pool:
#        max-active: 60 #连接池最大连接数
#        max-wait: -1ms #连接池最大阻塞等待时间（使用负值表示没有限制）
#        min-idle: 1 #连接池中的最小空闲连接
#        max-idle: 8 #连接池中的最大空闲连接
#  servlet:
#    multipart:
#      max-file-size: 20MB #单个文件最大为20M
#      max-request-size: 20MB #单次请求文件总数大小为20M


